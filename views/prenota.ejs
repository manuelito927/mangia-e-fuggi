<!doctype html>
<html lang="it">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mangia & Fuggi ‚Äî Prenota</title>
  <link rel="stylesheet" href="/styles.css" />
  <style>
    :root{
      --ink:#2b2622; --muted:#666; --brand:#7b4b3a;
      --ring:#eee; --ok:#166534; --warn:#9a3412; --bad:#991b1b;
      --okBg:#eaf9ef; --okRing:#b7e3c5;
      --pendBg:#fff7ed; --pendRing:#f2d3b7;
      --badBg:#fef2f2; --badRing:#f3c1c1;
    }
    body{background:#f7f4f1;font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;color:var(--ink);margin:0}
    header{max-width:1100px;margin:0 auto;display:flex;gap:12px;align-items:center;padding:12px 16px}
    .logo{width:40px;height:40px;border-radius:8px;object-fit:cover;border:2px solid #00000010}
    .title{font-weight:800;font-size:26px;color:var(--brand)}
    .wrap{max-width:1100px;margin:10px auto 30px;padding:0 16px;display:grid;grid-template-columns:1fr 360px;gap:16px}
    @media (max-width:980px){.wrap{grid-template-columns:1fr}}
    .card{background:#fff;border:1px solid var(--ring);border-radius:14px;box-shadow:0 2px 10px rgba(0,0,0,.06);padding:16px 18px}
    h2{margin:6px 0 12px;color:var(--brand)}
    .grid{display:grid;gap:12px}
    .row{display:flex;align-items:center;justify-content:space-between;gap:8px}
    .muted{color:var(--muted)}
    .pill{display:inline-block;padding:5px 10px;border-radius:999px;font-weight:700;font-size:12px;border:1px solid var(--ring);background:#fafafa}
    .pill.ok{background:var(--okBg); color:var(--ok); border-color:var(--okRing)}
    .pill.pend{background:var(--pendBg); color:var(--warn); border-color:var(--pendRing)}
    .pill.bad{background:var(--badBg); color:var(--bad); border-color:var(--badRing)}
    .btn{background:#9b5c2e;color:#fff;border:0;border-radius:10px;padding:9px 14px;font-weight:700;cursor:pointer;box-shadow:0 6px 14px rgba(155,92,46,.25)}
    .btn:disabled{opacity:.55;cursor:not-allowed;box-shadow:none}
    .btn.ghost{background:#00000007;color:var(--ink);border:1px solid var(--ring);box-shadow:none}
    .eta{font-weight:700}

    .table-card{
      border:2px solid var(--ring); border-radius:14px; padding:12px 14px; background:#fff;
      transition:box-shadow .15s ease, transform .08s ease, border-color .15s ease;
    }
    .table-card:hover{ transform:translateY(-1px); box-shadow:0 8px 26px rgba(0,0,0,.08) }
    .table-card.free{ border-color: var(--okRing) }
    .table-card.occupied{ border-color: var(--badRing) }
    .table-card.reserved{ border-color: var(--pendRing) }
    .title-row{display:flex;align-items:center;gap:10px}
    .title-row h3{margin:0;font-size:18px}
    .sub{font-size:14px}
    .actions{display:flex;flex-direction:column;align-items:flex-end;gap:8px}
    @media (min-width:560px){ .actions{flex-direction:row;align-items:center} }

    .backdrop{position:fixed;inset:0;background:#0007;display:none;align-items:center;justify-content:center;z-index:50}
    .modal{width:min(520px,94vw);background:#fff;border-radius:14px;box-shadow:0 20px 60px rgba(0,0,0,.35);overflow:hidden}
    .modal header{display:flex;gap:8px;align-items:center;border-bottom:1px solid #eee;padding:12px 14px}
    .modal .body{padding:14px}
    .close{margin-left:auto;font-size:22px;cursor:pointer}
    .field{display:flex;flex-direction:column;gap:4px;margin:8px 0}
    input,select{padding:10px;border:1px solid #e6e2df;border-radius:10px}
  </style>
</head>
<body>
  <header>
    <img class="logo" src="/img/LOGO.JPG" alt="Logo" onerror="this.src='/img/fallback.jpg'">
    <div class="title">Mangia &amp; Fuggi</div>
    <div style="margin-left:auto"><a id="link-home" class="btn ghost" href="/">‚Üê Home</a></div>
  </header>

  <div class="wrap">
    <main class="card">
      <h2 id="title-main">ü™ë Prenota un tavolo</h2>
      <p id="subtitle" class="muted">Vedi disponibilit√† in tempo reale e il tempo stimato di liberazione (ETA) calcolato sulle medie storiche.</p>

      <div id="list" class="grid"></div>
      <p id="error" class="pill bad" style="display:none"></p>
    </main>

    <aside class="card">
      <h3 id="legend">Legenda</h3>
      <p><span class="pill ok" id="lab-free">libero</span> <span class="pill pend" id="lab-reserved">riservato</span> <span class="pill bad" id="lab-occupied">occupato</span></p>
      <p id="legend-text" class="muted" style="font-size:13px">
        ‚Ä¢ Se un tavolo √® occupato o riservato puoi comunque prenotare: verrai confermato automaticamente appena si libera.<br/>
        ‚Ä¢ Se √® libero la prenotazione parte subito.
      </p>
    </aside>
  </div>

  <!-- Modal prenotazione -->
  <div id="bk-backdrop" class="backdrop" aria-hidden="true">
    <div class="modal">
      <header>
        <strong id="bk-title">Prenota</strong>
        <div class="close" onclick="closeModal()">√ó</div>
      </header>
      <div class="body">
        <form id="bk-form" onsubmit="return submitBooking(event)">
          <input type="hidden" id="f-table-id" />
          <div class="field">
            <label for="f-name" id="lab-name">Nome</label>
            <input id="f-name" required placeholder="Mario Rossi" />
          </div>
          <div class="field">
            <label for="f-phone" id="lab-phone">Telefono (opzionale)</label>
            <input id="f-phone" inputmode="tel" placeholder="333 1234567" />
          </div>
          <div class="field">
            <label for="f-size" id="lab-size">Persone</label>
            <select id="f-size">
              <option>2</option><option>3</option><option>4</option>
              <option>5</option><option>6</option><option>7</option>
            </select>
          </div>
          <div class="field">
            <label for="f-when" id="lab-when">Quando</label>
            <input id="f-when" type="datetime-local" />
            <small id="note-when" class="muted">Lascia vuoto per ‚Äúappena possibile‚Äù (subito se libero, in coda se riservato).</small>
          </div>
          <div class="row" style="justify-content:flex-end;gap:8px;margin-top:10px">
            <button type="button" class="btn ghost" onclick="closeModal()" id="btn-cancel">Annulla</button>
            <button type="submit" class="btn" id="btn-confirm">Conferma</button>
          </div>
          <p id="bk-msg" class="pill ok" style="display:none"></p>
          <p id="bk-err" class="pill bad" style="display:none"></p>
        </form>
      </div>
    </div>
  </div>

  <script>
    const elList = document.getElementById('list');
    const elErr  = document.getElementById('error');
    let refreshTimer = null, loading = false;

    // Traduzioni IT/EN
    const LANG = {
      it: {
        titleMain: "ü™ë Prenota un tavolo",
        subtitle: "Vedi disponibilit√† in tempo reale e il tempo stimato di liberazione (ETA) calcolato sulle medie storiche.",
        legend: "Legenda",
        legendText: "‚Ä¢ Se un tavolo √® occupato o riservato puoi comunque prenotare: verrai confermato automaticamente appena si libera.\n‚Ä¢ Se √® libero la prenotazione parte subito.",
        free: "libero", reserved: "riservato", occupied: "occupato",
        modalTitle: "Prenota",
        name: "Nome", phone: "Telefono (opzionale)", size: "Persone", when: "Quando",
        noteWhen: "Lascia vuoto per ‚Äúappena possibile‚Äù (subito se libero, in coda se riservato).",
        cancel: "Annulla", confirm: "Conferma",
        bookNow: "Prenota subito", bookLater: "Prenota per quando si libera", bookAfter: t=>`Prenota tra ${t}`,
        msgWait: "Prenotazione registrata: sar√† confermata appena il tavolo si libera.",
        msgOk: "Prenotazione confermata! Grazie.",
        msgErr: "Errore prenotazione. Riprova.",
        back: "‚Üê Home"
      },
      en: {
        titleMain: "ü™ë Book a table",
        subtitle: "See real-time availability and estimated free time (ETA) based on historical averages.",
        legend: "Legend",
        legendText: "‚Ä¢ If a table is occupied or reserved, you can still book: it will confirm automatically when it becomes free.\n‚Ä¢ If it's free, your booking starts immediately.",
        free: "free", reserved: "reserved", occupied: "occupied",
        modalTitle: "Book",
        name: "Name", phone: "Phone (optional)", size: "People", when: "When",
        noteWhen: "Leave empty for 'as soon as possible' (immediately if free, queued if reserved).",
        cancel: "Cancel", confirm: "Confirm",
        bookNow: "Book now", bookLater: "Book when available", bookAfter: t=>`Book in ${t}`,
        msgWait: "Booking registered: it will be confirmed as soon as the table becomes free.",
        msgOk: "Booking confirmed! Thank you.",
        msgErr: "Booking error. Please try again.",
        back: "‚Üê Home"
      }
    };

    function getLang(){
      const fromUrl = new URLSearchParams(location.search).get("lang");
      if(fromUrl && LANG[fromUrl]) { localStorage.setItem("lang", fromUrl); return fromUrl; }
      const stored = localStorage.getItem("lang");
      return stored && LANG[stored] ? stored : "it";
    }
    const lang = getLang();
    const T = LANG[lang];
    document.documentElement.lang = lang;

    // Applica testo statico
    document.getElementById("title-main").textContent = T.titleMain;
    document.getElementById("subtitle").textContent = T.subtitle;
    document.getElementById("legend").textContent = T.legend;
    document.getElementById("legend-text").textContent = T.legendText;
    document.getElementById("lab-free").textContent = T.free;
    document.getElementById("lab-reserved").textContent = T.reserved;
    document.getElementById("lab-occupied").textContent = T.occupied;
    document.getElementById("lab-name").textContent = T.name;
    document.getElementById("lab-phone").textContent = T.phone;
    document.getElementById("lab-size").textContent = T.size;
    document.getElementById("lab-when").textContent = T.when;
    document.getElementById("note-when").textContent = T.noteWhen;
    document.getElementById("btn-cancel").textContent = T.cancel;
    document.getElementById("btn-confirm").textContent = T.confirm;
    document.getElementById("link-home").textContent = T.back;

    function badgeClass(status){
      if(status==='free') return 'ok';
      if(status==='reserved') return 'pend';
      return 'bad';
    }
    function cardClass(status){
      if(status==='free') return 'free';
      if(status==='reserved') return 'reserved';
      return 'occupied';
    }

    async function load(){
      if(loading) return;
      loading = true;
      elErr.style.display = "none";
      try{
        const r = await fetch("/api/tables/status", { cache:"no-store" });
        const js = await r.json();
        if(!js.ok) throw new Error("Errore caricamento tavoli");

        elList.innerHTML = "";
        for(const t of js.tables){
          const s   = t.status;
          const eta = (t.eta_minutes!=null) ? `${t.eta_minutes} min` : (s==='free'?'‚Äî':'n.d.');
          const avg = (t.avg_minutes!=null) ? `${t.avg_minutes} min` : 'n.d.';
          const btnText =
            s==='free'     ? T.bookNow :
            s==='occupied' ? T.bookAfter(eta) :
                             T.bookLater;

          const card = document.createElement('div');
          card.className = `table-card ${cardClass(s)}`;
          card.innerHTML = `
            <div class="row">
              <div>
                <div class="title-row">
                  <h3><strong>${t.name || ('Tavolo ' + t.id)}</strong></h3>
                  <span class="muted sub">¬∑ ${t.seats ?? '-'} posti</span>
                </div>
                <div class="muted sub">Media sosta: <span class="eta">${avg}</span> ¬∑ ETA: <span class="eta">${eta}</span></div>
              </div>
              <div class="actions">
                <span class="pill ${badgeClass(s)}">${T[s]}</span>
                <button class="btn" onclick='openModal(${JSON.stringify({id:t.id,name:t.name || ("Tavolo "+t.id)})})'>
                  ${btnText}
                </button>
              </div>
            </div>
          `;
          elList.appendChild(card);
        }
      }catch(e){
        console.error(e);
        elErr.textContent = T.msgErr;
        elErr.style.display = "inline-block";
      }finally{
        loading = false;
      }
    }

    function startAutoRefresh(){
      if(refreshTimer) clearInterval(refreshTimer);
      refreshTimer = setInterval(load, 8000);
    }

    function openModal(t){
      document.getElementById('bk-title').textContent = T.modalTitle + " ¬∑ " + t.name;
      document.getElementById('f-table-id').value = t.id;
      document.getElementById('bk-backdrop').style.display = 'flex';
      document.getElementById('bk-msg').style.display = 'none';
      document.getElementById('bk-err').style.display = 'none';
    }
    function closeModal(){ document.getElementById('bk-backdrop').style.display='none'; }

    async function submitBooking(e){
      e.preventDefault();
      const table_id = Number(document.getElementById('f-table-id').value);
      const customer_name  = document.getElementById('f-name').value.trim();
      const customer_phone = document.getElementById('f-phone').value.trim();
      const size = Number(document.getElementById('f-size').value);
      const requested_for = document.getElementById('f-when').value || null;

      const msg = document.getElementById('bk-msg');
      const err = document.getElementById('bk-err');
      msg.style.display = err.style.display = "none";

      try{
        const r = await fetch("/api/reservations",{
          method:"POST",
          headers:{"Content-Type":"application/json"},
          body: JSON.stringify({ table_id, customer_name, customer_phone, size, requested_for })
        });
        const js = await r.json();
        if(!r.ok || !js.ok) throw new Error(js.error||"Errore");

        msg.textContent = js.reservation?.status === "waiting" ? T.msgWait : T.msgOk;
        msg.style.display = "inline-block";
        await load();
        setTimeout(closeModal, 900);
      }catch(e){
        console.error(e);
        err.textContent = T.msgErr;
        err.style.display = "inline-block";
      }
      return false;
    }

    load();
    startAutoRefresh();
  </script>
</body>
</html>