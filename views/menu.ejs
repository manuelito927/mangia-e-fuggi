<!doctype html>
<html lang="it">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mangia & Fuggi â€“ Menu</title>

  <link rel="stylesheet" href="/styles.css" />
  <style>
    .container{max-width:1100px;margin:0 auto;display:grid;grid-template-columns:1fr 340px;gap:18px}
    .card{background:#fff;border-radius:14px;padding:16px 18px;box-shadow:0 2px 10px rgba(0,0,0,.06)}
    h2{font-size:20px;margin:8px 0 12px;color:#7b4b3a}
    .note{font-size:12px;color:#666;margin-top:6px;line-height:1.4}
    .warn{color:#b42318}
    header{max-width:1100px;margin:0 auto 20px;display:flex;gap:12px;align-items:center}
    header img.logo{width:46px;height:46px;object-fit:cover;border-radius:8px;border:2px solid #7b4b3a22}
    .title{font-weight:700;font-size:28px;color:#7b4b3a}
    .btn-row{display:flex;flex-direction:column;gap:10px}
    .btn[disabled]{opacity:.5;cursor:not-allowed}
    @media (max-width:900px){.container{grid-template-columns:1fr}}

    /* â€”â€” Modal semplice per "Dividi & paga" */
    .modal-backdrop{
      position:fixed; inset:0; background:#0008; display:none;
      align-items:center; justify-content:center; z-index:50;
    }
    .modal{ width:min(680px, 94vw); background:#fff; border-radius:14px;
      box-shadow:0 20px 60px rgba(0,0,0,.35); overflow:hidden }
    .modal header{padding:14px 16px; border-bottom:1px solid #eee; margin:0; max-width:none}
    .modal .body{padding:16px}
    .close-x{margin-left:auto; font-size:22px; line-height:1; cursor:pointer}

    .tabs{display:flex; gap:8px; margin-bottom:12px}
    .tab{border:1px solid #e6e2df; background:#faf9f7; padding:8px 12px; border-radius:999px; cursor:pointer; font-weight:600}
    .tab.active{background:#7b4b3a; color:#fff; border-color:#7b4b3a}

    .row{display:flex; gap:8px; align-items:center; margin:6px 0}
    .row input[type="text"]{flex:1; padding:8px 10px; border:1px solid #e6e2df; border-radius:8px}
    .row input[type="number"]{width:130px; padding:8px 10px; border:1px solid #e6e2df; border-radius:8px}
    .pill{background:#f3f1ef; padding:6px 10px; border-radius:999px; font-weight:700}
    .split-actions{display:flex; gap:8px; flex-wrap:wrap; margin-top:10px}
    .muted{color:#777; font-size:13px}
    .err{color:#b42318; font-size:13px}

    .quota-list{display:flex; flex-direction:column; gap:8px; margin-top:6px}
    .quota-item{display:flex; gap:10px; align-items:center; justify-content:space-between;
      border:1px dashed #e6e2df; padding:10px; border-radius:10px}
  </style>
</head>
<body>
  <header>
    <img class="logo" src="/img/LOGO.JPG" alt="Logo" onerror="this.src='/img/fallback.jpg'">
    <div class="title">Mangia &amp; Fuggi</div>
  </header>

  <div class="container">
    <main>
      <!-- ANTIPASTI -->
      <section id="antipasti" class="card">
        <h2>Antipasti</h2>
        <%- include('partials/item', {name:'Bruschette',        desc:'Pomodoro, basilico, olio EVO', price:4.00, img:'/img/BRUSCHETTE.JPG.jpg'}) %>
        <%- include('partials/item', {name:'Olive & Taralli',    desc:'Selezione tipica pugliese',    price:3.50, img:'/img/TARALLINI E OLIVE.JPG'}) %>
        <%- include('partials/item', {name:'Caprese',            desc:'Mozzarella, pomodoro, origano',price:7.00, img:'/img/CAPRESE.JPG'}) %>
        <%- include('partials/item', {name:'Parmigiana',         desc:'Melanzane, pomodoro, grana',   price:7.50, img:'/img/PARMIGIANA.JPG'}) %>
        <%- include('partials/item', {name:'Fritto misto',       desc:'Arancini, crocchÃ¨, panelle',   price:8.00, img:'/img/FRITTINI.JPG'}) %>
      </section>

      <!-- PIZZE CLASSICHE -->
      <section id="classiche" class="card">
        <h2>Pizze classiche</h2>
        <%- include('partials/item', {name:'Margherita',         desc:'Pomodoro, mozzarella, basilico', price:5.00, img:'/img/MARGHERITA.JPG'}) %>
        <%- include('partials/item', {name:'Marinara',           desc:'Pomodoro, aglio, origano',       price:4.50, img:'/img/MARINARA.JPG'}) %>
        <%- include('partials/item', {name:'Diavola',            desc:'Salame piccante',                price:7.00, img:'/img/DIAVOLA.JPG'}) %>
        <%- include('partials/item', {name:'Prosciutto e funghi',desc:'Cotto e champignon',             price:7.50, img:'/img/COTTOEFUNGHI.JPG'}) %>
        <%- include('partials/item', {name:'Quattro formaggi',   desc:'Mozzarella, gorgonzola, grana, provola', price:8.00, img:'/img/4FORMAGGI.JPG'}) %>
      </section>

      <!-- PIZZE GOURMET -->
      <section id="gourmet" class="card">
        <h2>Pizze gourmet</h2>
        <%- include('partials/item', {name:'Bufalina',           desc:'Pomodoro, bufala DOP, basilico', price:9.00,  img:'/img/BURRATA.JPG'}) %>
        <%- include('partials/item', {name:'Tartufo',            desc:'Crema di tartufo, provola, speck',price:11.00, img:'/img/TARTUFO.JPG'}) %>
        <%- include('partials/item', {name:'Mortazza',           desc:'Pistacchio, stracciatella, mortadella', price:10.50, img:'/img/MORTAZZA.JPG'}) %>
        <%- include('partials/item', {name:'Nduja & Burrata',    desc:'â€™Nduja calabrese, burrata',       price:10.00, img:'/img/NDUJA E MORTADELLA.JPG'}) %>
      </section>

      <!-- BEVANDE -->
      <section id="bevande" class="card">
        <h2>Bevande</h2>
        <%- include('partials/item', {name:'Acqua',              desc:'Naturale o frizzante', price:1.50, img:'/img/ACQUA.JPG'}) %>
        <%- include('partials/item', {name:'Coca-Cola',          desc:'Lattina 33cl',          price:2.50, img:'/img/COCACOLA.JPG'}) %>
        <%- include('partials/item', {name:'Birra',              desc:'Chiara alla spina',     price:4.00, img:'/img/BIRRA.JPG'}) %>
        <%- include('partials/item', {name:'Vino della casa',    desc:'Bicchiere',             price:3.50, img:'/img/VINO.JPG'}) %>
      </section>

      <!-- DESSERT -->
      <section id="dessert" class="card">
        <h2>Dessert</h2>
        <%- include('partials/item', {name:'TiramisÃ¹',           desc:'Classico',            price:4.50, img:'/img/TIRAMISU.JPG'}) %>
        <%- include('partials/item', {name:'Panna cotta',        desc:'Frutti di bosco',     price:4.00, img:'/img/PANNACOTTA.JPG'}) %>
        <%- include('partials/item', {name:'Cheesecake',         desc:'Ricotta e pistacchio',price:4.50, img:'/img/CHEESECAKE.JPG'}) %>
      </section>
    </main>

    <aside class="card cart">
      <h3>Carrello</h3>
      <ul id="cart"></ul>
      <div class="tot"><span>Totale</span><span id="total">â‚¬ 0,00</span></div>

      <div class="btn-row" style="margin-top:10px">
        <button id="btn-pay-online" class="btn" onclick="orderAndPayOnline()" disabled>ðŸ’³ Ordina &amp; paga online</button>
        <button id="btn-pay-cashier" class="btn btn-ghost" onclick="orderPayAtCounter()" disabled>ðŸ’µ Ordina &amp; paga in cassa</button>
        <button id="btn-split" class="btn btn-ghost" onclick="openSplitModal()" disabled>âž— Dividi &amp; paga</button>
      </div>
      <div id="pay-note" class="note"></div>
    </aside>
  </div>

  <!-- ===== Modal DIVIDI & PAGA ===== -->
  <div id="split-backdrop" class="modal-backdrop" role="dialog" aria-modal="true" aria-hidden="true">
    <div class="modal">
      <header>
        <div class="title" style="font-size:20px;color:#7b4b3a;margin:0">Dividi &amp; paga</div>
        <div class="close-x" onclick="closeSplitModal()">Ã—</div>
      </header>
      <div class="body">
        <div class="muted">Totale conto: <span id="split-total" class="pill">â‚¬ 0,00</span></div>

        <div class="tabs">
          <button id="tab-equal" class="tab active" onclick="setSplitMode('equal')">Alla romana</button>
          <button id="tab-custom" class="tab" onclick="setSplitMode('custom')">Importi personalizzati</button>
        </div>

        <!-- Alla romana -->
        <div id="pane-equal">
          <div class="row">
            <label>Numero persone:</label>
            <input id="equal-n" type="number" min="2" value="2" oninput="renderEqual()" />
            <span class="muted">Quota per persona calcolata automaticamente.</span>
          </div>
          <div id="equal-quotas" class="quota-list"></div>
        </div>

        <!-- Personalizzato -->
        <div id="pane-custom" style="display:none">
          <div id="custom-rows"></div>
          <div class="split-actions">
            <button class="btn btn-ghost" type="button" onclick="addCustomRow()">+ Aggiungi persona</button>
            <span class="muted">La somma deve essere uguale al totale.</span>
          </div>
          <div id="custom-error" class="err" style="display:none"></div>
          <div id="custom-quotas" class="quota-list" style="margin-top:10px"></div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // ======= Stato carrello / pagamenti =======
    const cart = new Map();
    let PAY_ENABLED = false;

    (async () => {
      try{
        const r = await fetch("/api/pay-config");
        const j = await r.json();
        PAY_ENABLED = !!(j && j.enabled);
        document.getElementById("pay-note").innerHTML = PAY_ENABLED
          ? "Il pagamento online aprirÃ  SumUp con lâ€™importo del carrello."
          : '<span class="warn">Pagamento online disabilitato: verifica credenziali SumUp.</span>';
      }catch{}
      updateButtons();
    })();

    // Utils
    function cssId(s){ return s.replace(/[^a-z0-9]+/gi,'_'); }
    function euro(n){ return "â‚¬ "+Number(n).toFixed(2).replace(".",","); }
    function cartTotal(){ return Array.from(cart.values()).reduce((s,i)=>s+i.qty*i.price,0); }

    // Q.tÃ 
    function inc(name, price){
      const it = cart.get(name)||{price,qty:0};
      it.qty++; cart.set(name,it);
      document.getElementById('q-'+cssId(name)).textContent=it.qty;
      renderCart();
    }
    function dec(name){
      const it = cart.get(name)||{qty:0,price:0};
      it.qty=Math.max(0,it.qty-1);
      if(it.qty===0) cart.delete(name); else cart.set(name,it);
      document.getElementById('q-'+cssId(name)).textContent=it.qty||0;
      renderCart();
    }

    function renderCart(){
      const ul=document.getElementById('cart'); ul.innerHTML="";
      let tot=0;
      for(const [n,it] of cart.entries()){
        tot+=it.qty*it.price;
        const li=document.createElement('li');
        li.innerHTML=`<span>${it.qty} Ã— ${n}</span><span>${euro(it.qty*it.price)}</span>`;
        ul.appendChild(li);
      }
      document.getElementById('total').textContent=euro(tot);
      updateButtons();
    }

    function updateButtons(){
      const hasItems = cart.size > 0 && cartTotal() > 0;
      document.getElementById('btn-pay-cashier').disabled = !hasItems;
      const onlineBtn = document.getElementById('btn-pay-online');
      onlineBtn.disabled = !(hasItems && PAY_ENABLED);
      document.getElementById('btn-split').disabled = !(hasItems && PAY_ENABLED);
    }

    // â€”â€” Core: salva ordine e ritorna order_id
    async function createOrder(){
      const items=Array.from(cart.entries()).map(([n,it])=>({name:n,price:it.price,qty:it.qty}));
      if(items.length===0){ alert("Aggiungi almeno un prodotto"); return null; }
      const total=items.reduce((s,i)=>s+i.price*i.qty,0);
      const r=await fetch("/api/checkout",{
        method:"POST",
        headers:{"Content-Type":"application/json"},
        body:JSON.stringify({ tableCode:null, items, total })
      });
      const js = await r.json();
      if(!js.ok){ alert("Errore invio ordine"); return null; }
      return { order_id: js.order_id, total };
    }

    // ðŸ’³ Ordina & paga online (intero)
    async function orderAndPayOnline(){
      if(!PAY_ENABLED){ alert("Pagamento online non disponibile."); return; }
      const saved = await createOrder();
      if(!saved) return;

      const ok = await payAmount(saved.total, `Mangia & Fuggi - Ordine #${saved.order_id}`);
      if(ok){ cart.clear(); renderCart(); }
    }

    // ðŸ’µ Ordina & paga in cassa
    async function orderPayAtCounter(){
      const saved = await createOrder();
      if(!saved) return;
      alert("Ordine inviato! Presentati in cassa per il pagamento.");
      cart.clear(); renderCart();
    }

    // ======= DIVIDI & PAGA =======
    let splitMode = 'equal'; // 'equal' | 'custom'
    function openSplitModal(){
      document.getElementById('split-total').textContent = euro(cartTotal());
      document.getElementById('split-backdrop').style.display = 'flex';
      renderEqual();
      resetCustom();
    }
    function closeSplitModal(){ document.getElementById('split-backdrop').style.display='none'; }

    function setSplitMode(mode){
      splitMode = mode;
      document.getElementById('tab-equal').classList.toggle('active', mode==='equal');
      document.getElementById('tab-custom').classList.toggle('active', mode==='custom');
      document.getElementById('pane-equal').style.display = (mode==='equal')?'block':'none';
      document.getElementById('pane-custom').style.display = (mode==='custom')?'block':'none';
    }

    // Alla romana
    function renderEqual(){
      const n = Math.max(2, Number(document.getElementById('equal-n').value || 2));
      const tot = cartTotal();
      const quota = Math.round((tot/n)*100)/100;
      const list = document.getElementById('equal-quotas'); list.innerHTML = "";
      for(let i=1;i<=n;i++){
        const div = document.createElement('div');
        div.className = "quota-item";
        div.innerHTML = `
          <div><strong>Persona ${i}</strong> â€” quota: <span class="pill">${euro(quota)}</span></div>
          <button class="btn" type="button" onclick="payQuota(${quota.toFixed(2)})">Paga quota #${i}</button>
        `;
        list.appendChild(div);
      }
    }

    // Personalizzato
    function resetCustom(){
      document.getElementById('custom-rows').innerHTML = "";
      document.getElementById('custom-quotas').innerHTML = "";
      document.getElementById('custom-error').style.display = "none";
      for(let i=1;i<=2;i++) addCustomRow();
    }
    function addCustomRow(){
      const wrap = document.getElementById('custom-rows');
      const idx = wrap.children.length+1;
      const row = document.createElement('div');
      row.className="row";
      row.innerHTML = `
        <input type="text" placeholder="Nome (opzionale)" value="Persona ${idx}">
        <input type="number" step="0.01" min="0" placeholder="Importo es. 7.50" oninput="renderCustom()">
      `;
      wrap.appendChild(row);
      renderCustom();
    }
    function renderCustom(){
      const rows = [...document.querySelectorAll('#custom-rows .row')];
      const quotas = [];
      for(const r of rows){
        const name = r.querySelector('input[type="text"]').value.trim() || 'Persona';
        const val = Number(r.querySelector('input[type="number"]').value || 0);
        if(val>0) quotas.push({name, amount: Math.round(val*100)/100});
      }
      const sum = quotas.reduce((s,q)=>s+q.amount,0);
      const tot = Math.round(cartTotal()*100)/100;

      const err = document.getElementById('custom-error');
      if(sum !== tot){
        err.style.display = "block";
        err.textContent = `La somma degli importi (${euro(sum)}) deve essere uguale al totale (${euro(tot)}).`;
      } else {
        err.style.display = "none";
      }

      const list = document.getElementById('custom-quotas'); list.innerHTML="";
      quotas.forEach((q, i)=>{
        const div = document.createElement('div');
        div.className = "quota-item";
        div.innerHTML = `
          <div><strong>${q.name}</strong> â€” quota: <span class="pill">${euro(q.amount)}</span></div>
          <button class="btn" type="button" ${sum!==tot?'disabled':''}
                  onclick="payQuota(${q.amount.toFixed(2)})">Paga quota #${i+1}</button>
        `;
        list.appendChild(div);
      });
    }

    // â€” Esegue un pagamento SumUp per un importo specifico
    async function payQuota(amount){
      if(!PAY_ENABLED){ alert("Pagamento online non disponibile."); return; }
      const saved = await createOrder(); // un ordine backend; quota pagata separatamente
      if(!saved) return;
      await payAmount(Number(amount), `Mangia & Fuggi - Quota ordine #${saved.order_id}`);
    }

    // â€” Chiamata generica a /api/pay-sumup (con diagnostica e redirect diretto)
    async function payAmount(amount, description){
      try{
        const r = await fetch("/api/pay-sumup", {
          method:"POST",
          headers:{"Content-Type":"application/json"},
          body: JSON.stringify({
            amount: Number(amount.toFixed(2)),
            currency:"EUR",
            description
          })
        });

        const text = await r.text();
        let js; try { js = JSON.parse(text); } catch { js = { ok:false, raw:text }; }

        if (r.ok && js.ok && js.url){
          // Redirect diretto (evita blocchi popup su iOS)
          location.href = js.url;
          return true;
        }

        const msg = js?.error || js?.data?.message || js?.raw || `HTTP ${r.status}`;
        alert("Pagamento non disponibile.\nDettagli: " + msg);
        console.error("pay-sumup error:", {status:r.status, js});
        return false;
      }catch(err){
        alert("Pagamento non disponibile.\nErrore di rete.");
        console.error(err);
        return false;
      }
    }
  </script>
</body>
</html>