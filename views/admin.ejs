<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Mangia & Fuggi ‚Äî Dashboard</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet" />
  <style>
    :root{
      --bg:#f6efe7; --panel:#ffffff; --ink:#3b2a23; --muted:#8c7b73; --brand:#7a4a3b; --brand-2:#f2d7c8; --ok:#1f8f4e; --warn:#b42318;
      --ring:#e5c9ba;
    }
    *{box-sizing:border-box}
    body{margin:0;background:var(--bg);color:var(--ink);font-family:Inter,system-ui,Arial,sans-serif}
    .wrap{max-width:1100px;margin:0 auto;padding:18px}
    header{display:flex;gap:12px;align-items:center;margin-bottom:14px}
    h1{font-weight:800;letter-spacing:.3px;margin:0}
    .pill{background:var(--brand-2);color:var(--brand);border-radius:16px;padding:6px 12px;font-weight:700;display:inline-block}
    .layout{display:grid;grid-template-columns:240px 1fr;gap:16px}
    .side{background:var(--panel);border:1px solid var(--ring);border-radius:18px;padding:14px}
    .nav .item{display:block;padding:12px 14px;border-radius:12px;margin-bottom:8px;border:1px solid #eee;text-decoration:none;color:inherit}
    .nav .item.active{background:var(--brand);color:#fff;border-color:var(--brand)}
    .content{min-height:60vh}
    .card{background:var(--panel);border:1px solid var(--ring);border-radius:18px;padding:16px;margin-bottom:16px}
    .row{display:flex;justify-content:space-between;gap:10px}
    .muted{color:var(--muted)}
    .btn{border:1px solid var(--ring);background:#fff;padding:8px 12px;border-radius:10px;cursor:pointer}
    .btn:hover{filter:brightness(.98)}
    .btn.success{background:#e8f6ee;border-color:#cbe9d7;color:var(--ok)}
    .btn.danger{background:#fdeaea;border-color:#f5d4d4;color:var(--warn)}
    .btn.brand{background:var(--brand);border-color:var(--brand);color:#fff}
    .tabs{display:flex;gap:8px;margin-bottom:10px}
    .tab{padding:8px 12px;border-radius:10px;border:1px solid var(--ring);background:#fff;cursor:pointer}
    .tab.active{background:var(--brand);color:#fff;border-color:var(--brand)}
    .order-card{background:#fff;border:1px solid var(--ring);border-radius:16px;padding:14px;margin-bottom:12px}
    .order-card .head{display:flex;align-items:center;justify-content:space-between;margin-bottom:8px}
    table{width:100%;border-collapse:collapse}
    th,td{padding:10px;border-bottom:1px solid #eee;text-align:left}
    th{font-size:.9rem;color:#6b5c55}
    .grid2{display:grid;grid-template-columns:1fr 1fr;gap:16px}
    @media (max-width:900px){.layout{grid-template-columns:1fr}}
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>Mangia & Fuggi ‚Äî <span class="pill">Dashboard</span></h1>
    </header>

    <div class="layout">
      <!-- SIDEBAR -->
      <aside class="side">
        <div class="nav">
          <a href="#" class="item active" data-section="orders">üìã Ordini</a>
          <a href="#" class="item" data-section="stats">üìä Statistiche</a>
        </div>
        <div class="card">
          <label style="display:flex;gap:8px;align-items:center">
            <input type="checkbox" id="chk-sound" />
            <span>Suono nuovi ordini</span>
          </label>
        </div>
      </aside>

      <!-- MAIN -->
      <main class="content">
        <!-- ===== SEZIONE ORDINI ===== -->
        <section id="sec-orders" class="card">
          <div class="tabs">
            <button class="tab active" data-tab-status="pending">Pendenti</button>
            <button class="tab" data-tab-status="completed">Completati</button>
            <button class="tab" data-tab-status="canceled">Eliminati</button>
            <div style="flex:1"></div>
            <button class="btn brand" id="btn-refresh">Aggiorna</button>
          </div>
          <div id="orders-wrap"></div>
        </section>

        <!-- ===== SEZIONE STATISTICHE ===== -->
        <section id="sec-stats" class="card" style="display:none">
          <div class="grid2">
            <div class="card">
              <h3 style="margin-top:0">Giornaliero</h3>
              <div class="row" style="gap:8px;align-items:center;margin:8px 0">
                <label class="muted">Data</label>
                <input type="date" id="dayDate" />
                <button class="btn brand" id="btnDay">Aggiorna</button>
              </div>
              <div id="dayPane"></div>
            </div>
            <div class="card">
              <h3 style="margin-top:0">Intervallo</h3>
              <div class="row" style="gap:8px;align-items:center;margin:8px 0">
                <label class="muted">Da</label>
                <input type="date" id="fromDate" />
                <label class="muted">A</label>
                <input type="date" id="toDate" />
                <button class="btn brand" id="btnRange">Aggiorna</button>
              </div>
              <div id="rangePane"></div>
            </div>
          </div>
        </section>
      </main>
    </div>
  </div>

  <script>
    const EL = (s,root=document)=>root.querySelector(s);
    const ELS = (s,root=document)=>Array.from(root.querySelectorAll(s));

    // ===== NAV laterale (stessa pagina) =====
    ELS('[data-section]').forEach(a=>{
      a.addEventListener('click',e=>{
        e.preventDefault();
        ELS('[data-section]').forEach(x=>x.classList.remove('active'));
        a.classList.add('active');
        const sec=a.dataset.section;
        EL('#sec-orders').style.display = sec==='orders'?'block':'none';
        EL('#sec-stats').style.display  = sec==='stats' ?'block':'none';
      });
    });

    // ===== Impostazioni (salvate su DB) =====
    async function loadSettings(){
      try{
        const r=await fetch('/api/settings'); const j=await r.json();
        if(j.ok) EL('#chk-sound').checked=!!j.sound_enabled;
      }catch{}
    }
    async function saveSettings(){
      const enabled=EL('#chk-sound').checked;
      await fetch('/api/settings',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({sound_enabled:enabled})});
    }
    EL('#chk-sound').addEventListener('change', saveSettings);

    // ===== ORDINI =====
    let CURRENT_STATUS='pending';
    async function loadOrders(){
      const r=await fetch(`/api/orders?status=${CURRENT_STATUS}`);
      const j=await r.json();
      const wrap=EL('#orders-wrap'); wrap.innerHTML='';
      if(!j.ok || !j.orders.length){ wrap.innerHTML='<div class="muted">Nessun ordine</div>'; return; }
      for(const o of j.orders){
        const items=(o.items||[]).map(it=>`
          <div class="row">
            <div>${it.qty}√ó ${it.name} <span class="muted">(‚Ç¨ ${Number(it.price).toFixed(2)})</span></div>
            <div>‚Ç¨ ${(Number(it.qty)*Number(it.price)).toFixed(2)}</div>
          </div>
        `).join('');
        const when=new Date(o.created_at).toLocaleString();
        const card=document.createElement('div');
        card.className='order-card';
        card.innerHTML=`
          <div class="head">
            <div>
              <div class="muted">ID: ${o.id}</div>
              <div class="muted">Tavolo: ${o.table_code||'-'}</div>
              <div class="muted">Data: ${when}</div>
            </div>
            <div class="pill">Totale: ‚Ç¨ ${Number(o.total).toFixed(2)}</div>
          </div>
          <div class="items">${items}</div>
          <div class="actions" style="display:flex;gap:8px;margin-top:10px">
            <button class="btn" data-act="print" data-id="${o.id}">üñ®Ô∏è Stampa</button>
            ${CURRENT_STATUS==='pending' ? `
              <button class="btn success" data-act="complete" data-id="${o.id}">‚úÖ Completa</button>
              <button class="btn danger"  data-act="cancel"   data-id="${o.id}">üóëÔ∏è Elimina</button>
            ` : `
              <button class="btn" data-act="restore" data-id="${o.id}">‚Ü©Ô∏è Ripristina</button>
            `}
          </div>
        `;
        wrap.appendChild(card);
      }
    }
    // azioni
    EL('#orders-wrap').addEventListener('click',async ev=>{
      const b=ev.target.closest('button[data-act]'); if(!b) return;
      const {act,id}=b.dataset;
      if(act==='print'){ window.print(); await fetch(`/api/orders/${id}/printed`,{method:'POST'}); return; }
      if(act==='complete'){ await fetch(`/api/orders/${id}/complete`,{method:'POST'}); }
      if(act==='cancel'){ if(!confirm('Confermi eliminazione?')) return; await fetch(`/api/orders/${id}/cancel`,{method:'POST'}); }
      if(act==='restore'){ await fetch(`/api/orders/${id}/restore`,{method:'POST'}); }
      await loadOrders();
    });
    // tabs
    ELS('[data-tab-status]').forEach(t=>{
      t.addEventListener('click',()=>{
        ELS('[data-tab-status]').forEach(x=>x.classList.remove('active'));
        t.classList.add('active'); CURRENT_STATUS=t.dataset.tabStatus; loadOrders();
      });
    });
    EL('#btn-refresh').addEventListener('click', loadOrders);

    // ===== STATISTICHE =====
    function euro(v){return '‚Ç¨ '+Number(v||0).toFixed(2)}
    function table(head,rows){
      return `<table><thead><tr>${head.map(h=>`<th>${h}</th>`).join('')}</tr></thead>
              <tbody>${rows.map(r=>`<tr>${r.map(c=>`<td>${c}</td>`).join('')}</tr>`).join('')}</tbody></table>`;
    }
    async function loadDay(){
      const d=EL('#dayDate').value || new Date().toISOString().slice(0,10);
      const r=await fetch(`/api/stats/day?date=${d}`); const j=await r.json();
      if(!j.ok) return EL('#dayPane').innerHTML='Errore';
      const per=j.perBucket.rows.map(b=>[ new Date(b.bucket).toLocaleTimeString().slice(0,5), b.orders, euro(b.revenue) ]);
      const top=j.top.map(x=>[x.name, x.qty, euro(x.revenue), x.pct+'%']);
      EL('#dayPane').innerHTML = `
        <div class="card">
          <div class="row"><div>Ordini</div><div><b>${j.count}</b></div></div>
          <div class="row"><div>Incasso</div><div><b>${euro(j.total)}</b></div></div>
        </div>
        ${table(['Ora','Ordini','Incasso'], per)}
        <h4>Top prodotti</h4>
        ${table(['Prodotto','Qt√†','Fatturato','Quota %'], top)}
      `;
    }
    async function loadRange(){
      const f=EL('#fromDate').value, t=EL('#toDate').value;
      if(!f || !t) return alert('Scegli "Da" e "A"');
      const r=await fetch(`/api/stats/range?from=${f}&to=${t}`); const j=await r.json();
      if(!j.ok) return EL('#rangePane').innerHTML='Errore';
      const per=j.perBucket.rows.map(b=>[ new Date(b.bucket).toLocaleDateString(), b.orders, euro(b.revenue) ]);
      const top=j.top.map(x=>[x.name, x.qty, euro(x.revenue), x.pct+'%']);
      EL('#rangePane').innerHTML = `
        <div class="card">
          <div class="row"><div>Ordini</div><div><b>${j.count}</b></div></div>
          <div class="row"><div>Incasso</div><div><b>${euro(j.total)}</b></div></div>
          <div class="row"><div>Scontrino medio</div><div><b>${euro(j.avg)}</b></div></div>
        </div>
        ${table(['Giorno','Ordini','Incasso'], per)}
        <h4>Top prodotti</h4>
        ${table(['Prodotto','Qt√†','Fatturato','Quota %'], top)}
      `;
    }
    EL('#btnDay').addEventListener('click', loadDay);
    EL('#btnRange').addEventListener('click', loadRange);

    // ===== START =====
    (async ()=>{
      EL('#dayDate').value = new Date().toISOString().slice(0,10);
      const d=new Date(); d.setDate(d.getDate()-6);
      EL('#fromDate').value = d.toISOString().slice(0,10);
      EL('#toDate').value   = new Date().toISOString().slice(0,10);

      await loadSettings();
      await loadOrders();
      await loadDay();
    })();
  </script>
</body>
</html>